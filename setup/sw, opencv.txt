-------------------------------------------------- 
	#sudo apt install -y wget
	sudo apt install -y build-essential pkg-config cmake git
	sudo apt install -y python3 python3-pip python3-venv python3-tk python3-pyqt5 python3-pyaudio 
	sudo apt install -y ffmpeg 
	sudo apt install -y vim tmux unzip
	sudo apt install -y openjdk-8-jre chromium-chromedriver

	설치 내역 볼 때
		apt 로 설치한 것은 apt show python3-kt
		pip3 로 설치한 것은 pip3 show bs4


	# cp /usr/lib/chromium-browser/chromedriver /usr/bin	==> 이미 되어 있음


	Visual studio code 설치
		한글입력 문제로 direct 설치 한다
			sudo dpkg -i code_1.50.1-1602600906_amd64.deb
		
		https://myskan.tistory.com/108


-------------------------------------------------- for opencv installation ----------------------------------------------------------
Prerequisites
	sudo apt install -y build-essential pkg-config cmake git
	sudo apt install -y [python3 python3-pip python3-venv] python3-tk python3-pyqt5 python3-pyaudio 
	sudo apt install -y ffmpeg 
	sudo apt install -y vim tmux unzip

	qt 설치
		sudo apt install qt5-default	// 이거 설치해서 잘 동작했음
		or
		'qt-unified-linux-x64-3.2.3-online.run' 를 다운받아 실행권한 부여한 후 실행. (chmod +x ...)

0. 참고
	https://blog.naver.com/roboholic84/221139256044	// opencv-master 최신버전
	https://ghostweb.tistory.com/823			// opencv-3.4.5

1. 다양한 이미지 포맷 지원
	$ sudo apt install -y libjpeg-dev libtiff5-dev libpng-dev	(libjasper-dev 는 ubuntu17 까지만 지원)

2. 다양한 비디오 포맷 지원
	$ sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev

3. OpenCV에는 highgui라는 서브 모듈이 있는데 이미지를 스크린에 출력하거나 간단한 GUI를 만드는데 사용된다. 이에 필요한 라이브러리를 설치 (오래 걸림)
	$ sudo apt install -y libgtk2.0-dev libgtk-3-dev

4. OpenCV 내의 행렬 연산을 최적화시키는데 필요
	$ sudo apt install -y libatlas-base-dev gfortran

5. OpenCV를 파이썬으로 사용할 수 있도록 파이썬 헤더를 설치
	$ sudo apt install -y python2.7-dev python3-dev

6. OpenCV 소스 다운로드
	$ wget -O opencv.zip https://github.com/opencv/opencv/archive/master.zip
	$ wget -O opencv-3.4.5.zip https://github.com/opencv/opencv/archive/3.4.5.zip
	$ unzip opencv.zip
	추가 lib 소스 다운로드
	$ wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/master.zip
	$ wget -O opencv_contrib-3.4.5.zip https://github.com/opencv/opencv_contrib/archive/3.4.5.zip
	$ unzip opencv_contrib.zip
	
#7. PIP를 업데이트
	$ wget https://bootstrap.pypa.io/get-pip.py
	$ sudo python get-pip.py
	$ sudo python3 get-pip.py
	
8. 가상환경에서 빌드 (opencv_contrib 의 경로 설정에 유의)
	$ cd ~/opencv
	$ mkdir build
	$ cd build

	// 아래 해당 버전 정보 수정 필수 <<<<<<<<<<<<<<<<<
	$ cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D INSTALL_PYTHON_EXAMPLES=ON \
-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.4.5/modules \
-D BUILD_EXAMPLE=ON ..

	// 아래 해당 버전 정보 수정 필수 <<<<<<<<<<<<<<<<<
	// 아래로 성공 (빌드 속도 느린 이유 에러 발생 조건 제거
	$ cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D WITH_TBB=OFF \
-D WITH_IPP=OFF \
-D WITH_1394=OFF \
-D BUILD_WITH_DEBUG_INFO=OFF \
-D BUILD_DOCS=OFF \
-D INSTALL_C_EXAMPLES=ON \
-D INSTALL_PYTHON_EXAMPLES=ON \
-D BUILD_EXAMPLES=OFF \
-D BUILD_TESTS=OFF \
-D BUILD_PERF_TESTS=OFF \
-D WITH_QT=ON \
-D WITH_GTK=OFF \
-D WITH_OPENGL=ON \
-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.4.5/modules \
-D WITH_V4L=ON \
-D WITH_FFMPEG=ON \
-D WITH_XINE=ON \
-D BUILD_NEW_PYTHON_SUPPORT=ON \
-D OPENCV_GENERATE_PKGCONFIG=ON ..

	// 빌드/설치
	$ make
	$ sudo make install/uninstall
	$ sudo ldconfig

9. OpenCV bindings를 cv 가상환경과 symbolic-link
	$ cd ~/.virtualenvs/cv/lib/python3.x/site-packages/
	$ ln -s /usr/local/lib/python3.x/site-packages/cv2.so cv2.so

10. 확인
	$ pkg-config --modversion opencv

	$ python3
	>>> import cv2
	>>> cv2.__version__
--------------------------------------------------
